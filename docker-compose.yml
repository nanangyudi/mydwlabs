services:
  postgres:
    image: elestio/postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data:Z
      - ./postgres-init:/docker-entrypoint-initdb.d:ro,Z
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  mage:
    image: elestio/mage-ai:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - REQUIRE_USER_AUTHENTICATION=${MAGE_REQUIRE_AUTH}
    volumes:
      - ./mage/data:/home/src
      - ./mage/mage_data:/root/.mage_data
    ports:
      - "${MAGE_PORT}:6789"

  odoo:
    image: odoo:17.0
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
          #    command: >
          #      odoo
          #      --db_host=${ODOO_DB_HOST}
          #      --db_port=${ODOO_DB_PORT}
          #      --db_user=${ODOO_DB_USER}
          #      --db_password=${ODOO_DB_PASSWORD}
          #      --db-filter=${ODOO_DB_FILTER}
    environment:
      - ADMIN_PASSWORD=${ODOO_ADMIN_PASSWORD}
        #- WITHOUT_DEMO=all
    ports:
      - "${ODOO_PORT}:8069"
    volumes:
      - ./odoo/extra-addons:/mnt/extra-addons
      - ./odoo/filestore:/var/lib/odoo

  clickhouse:
    image: clickhouse/clickhouse-server:24.8
    restart: always
    environment:
      - CLICKHOUSE_DB=${CH_DB}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    ports:
      - "${CH_HTTP_PORT}:8123"
      - "${CH_NATIVE_PORT}:9000"
    volumes:
      - ./clickhouse/data:/var/lib/clickhouse:Z
      - ./clickhouse/logs:/var/log/clickhouse-server:Z
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8123/ping | grep -q 'Ok'"]
      interval: 10s
      timeout: 5s
      retries: 5

